@model ChangePasswordVM
@{
    ViewData["Title"] = "Change Password";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .notification-area {
        position: relative;
        max-width: 100%;
        z-index: 1000;
    }

    .notification-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem;
        border-radius: 0.5rem;
        margin-bottom: 0.5rem;
        animation: slideIn 0.5s ease-out;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    @@keyframes slideIn {
        from {
            transform: translateY(-100%);
            opacity: 0;
        }

        to {
            transform: translateY(0);
            opacity: 1;
        }
    }

    .notification-item .btn-close {
        padding: 0.25rem 0.5rem;
        font-size: 1rem;
        line-height: 1;
        background: transparent url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23000'%3e%3cpath d='M.293.293a1 1 0 011.414 0L8 6.586 14.293.293a1 1 0 111.414 1.414L9.414 8l6.293 6.293a1 1 0 01-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 01-1.414-1.414L6.586 8 .293 1.707a1 1 0 010-1.414z'/%3e%3c/svg%3e") center/1em auto no-repeat;
        border: none;
    }

        .notification-item .btn-close:hover {
            opacity: 0.75;
        }

    .btn:hover {
        opacity: 0.9;
    }
</style>

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-lg border-0 rounded-4" style="background: linear-gradient(135deg, #f8f9fa, #e9ecef);">
                <div class="card-header bg-primary text-white text-center py-4" style="border-radius: 0.75rem 0.75rem 0 0;">
                    <h2 class="mb-0"><i class="bi bi-lock-fill me-2"></i> Change Password</h2>
                </div>
                <div class="card-body p-4">

                    @if (TempData["Success"] != null || TempData["Error"] != null)
                    {
                        <div class="notification-area mb-4">
                            @if (TempData["Success"] != null)
                            {
                                <div class="alert alert-success alert-dismissible fade show notification-item" role="alert">
                                    <span>@TempData["Success"]</span>
                                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                </div>
                            }
                            @if (TempData["Error"] != null)
                            {
                                <div class="alert alert-danger alert-dismissible fade show notification-item" role="alert">
                                    <span>@TempData["Error"]</span>
                                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                </div>
                            }
                        </div>
                    }

                    <div asp-validation-summary="All" class="text-danger mb-4"></div>

                    <form asp-action="ChangePassword" method="post" class="needs-validation" novalidate>
                        @Html.AntiForgeryToken()

                        <input type="hidden" asp-for="UserId" />

                        <div class="mb-3">
                            <label asp-for="CurrentPassword" class="form-label text-primary fw-bold"></label>
                            <input asp-for="CurrentPassword" class="form-control bg-white border-primary rounded-3" required />
                            <span asp-validation-for="CurrentPassword" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="NewPassword" class="form-label text-primary fw-bold"></label>
                            <input asp-for="NewPassword" class="form-control bg-white border-primary rounded-3" required />
                            <span asp-validation-for="NewPassword" class="text-danger"></span>
                        </div>

                        <div class="mb-4">
                            <label asp-for="ConfirmPassword" class="form-label text-primary fw-bold"></label>
                            <input asp-for="ConfirmPassword" class="form-control bg-white border-primary rounded-3" required />
                            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                        </div>

                        <button type="submit" class="btn btn-primary w-100 py-2 rounded-3" style="background: linear-gradient(90deg, #007bff, #0056b3);">
                            <i class="bi bi-key me-2"></i> Change Password
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        (function () {
            'use strict';
            var forms = document.querySelectorAll('.needs-validation');
            Array.prototype.slice.call(forms).forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        })();
    </script>
}