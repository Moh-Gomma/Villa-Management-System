@using Hotel.Application.Utility
@model ApplicationUser
@{
    ViewData["Title"] = "User Settings";

    if (User.IsInRole(SD.Role_Admin))
    {
        Layout = "_AdminLayout";
    }
    else
    {
        Layout = "_Layout";
    }
}

<style>
    .notification-area {
        position: relative;
        max-width: 100%;
        z-index: 1000;
    }

    .notification-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem;
        border-radius: 0.5rem;
        margin-bottom: 0.5rem;
        animation: slideIn 0.5s ease-out;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    @@keyframes slideIn {
        from

    {
        transform: translateY(-100%);
        opacity: 0;
    }

    to {
        transform: translateY(0);
        opacity: 1;
    }

    }

    .notification-item .btn-close {
        padding: 0.25rem 0.5rem;
        font-size: 1rem;
        line-height: 1;
        background: transparent url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23000'%3e%3cpath d='M.293.293a1 1 0 011.414 0L8 6.586 14.293.293a1 1 0 111.414 1.414L9.414 8l6.293 6.293a1 1 0 01-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 01-1.414-1.414L6.586 8 .293 1.707a1 1 0 010-1.414z'/%3e%3c/svg%3e") center/1em auto no-repeat;
        border: none;
    }

        .notification-item .btn-close:hover {
            opacity: 0.75;
        }

    .booking-grid {
        display: grid;
        gap: 1rem;
    }

    .booking-card {
        border: 1px solid #dee2e6;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .booking-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

    .btn:hover {
        opacity: 0.9;
    }

    a.text-decoration-none:hover {
        opacity: 0.7;
    }

    .modal-footer .btn {
        min-width: 120px;
    }
</style>

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-md-10">
            <div class="card shadow-lg border-0 rounded-4" style="background: linear-gradient(135deg, #f8f9fa, #e9ecef);">
                <div class="card-header bg-primary text-white text-center py-4" style="border-radius: 0.75rem 0.75rem 0 0;">
                    <h2 class="mb-0"><i class="bi bi-person-gear me-2"></i> User Settings</h2>
                </div>
                <div class="card-body p-5">

                    @if (TempData["Success"] != null || TempData["Error"] != null)
                    {
                        <div class="notification-area mb-4">
                            @if (TempData["Success"] != null)
                            {
                                <div class="alert alert-success alert-dismissible fade show notification-item" role="alert">
                                    <span>@TempData["Success"]</span>
                                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                </div>
                            }
                            @if (TempData["Error"] != null)
                            {
                                <div class="alert alert-danger alert-dismissible fade show notification-item" role="alert">
                                    <span>@TempData["Error"]</span>
                                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                </div>
                            }
                        </div>
                    }

                    <!-- Profile Form -->
                    <div class="row g-4">
                        <div class="col-md-6">
                            <form asp-action="Setting" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
                                @Html.AntiForgeryToken()

                                <div class="mb-3">
                                    <label asp-for="FirstName" class="form-label text-primary fw-bold"></label>
                                    <input asp-for="FirstName" class="form-control bg-white border-primary rounded-3" required />
                                    <span asp-validation-for="FirstName" class="text-danger"></span>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="LastName" class="form-label text-primary fw-bold"></label>
                                    <input asp-for="LastName" class="form-control bg-white border-primary rounded-3" required />
                                    <span asp-validation-for="LastName" class="text-danger"></span>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="Email" class="form-label text-primary fw-bold"></label>
                                    <input asp-for="Email" class="form-control bg-white border-primary rounded-3" required />
                                    <span asp-validation-for="Email" class="text-danger"></span>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="PhoneNumber" class="form-label text-primary fw-bold"></label>
                                    <input asp-for="PhoneNumber" class="form-control bg-white border-primary rounded-3" required />
                                    <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                                </div>

                                <div class="mb-4">
                                    <label asp-for="PersonalId" class="form-label text-primary fw-bold"></label>
                                    <input asp-for="PersonalId" class="form-control bg-white border-primary rounded-3" />
                                    <span asp-validation-for="PersonalId" class="text-danger"></span>
                                </div>

                                <button type="submit" class="btn btn-primary w-100 py-2 rounded-3" style="background: linear-gradient(90deg, #007bff, #0056b3);">
                                    <i class="bi bi-save me-2"></i> Update Profile
                                </button>
                            </form>
                        </div>

                        <!-- Booking History Section -->
                        <div class="col-md-6">
                            <div class="card h-100 border-0 rounded-3" style="background: rgba(255, 255, 255, 0.9);">
                                <div class="card-header bg-secondary text-white p-3" style="border-radius: 0.75rem 0.75rem 0 0;">
                                    <h4 class="mb-0 d-flex justify-content-between align-items-center">
                                        <span><i class="bi bi-clock-history me-2"></i> Recent Bookings</span>
                                        <a asp-action="BookingHistory" asp-controller="Booking" class="text-white text-decoration-none small" style="transition: opacity 0.3s;">
                                            <i class="bi bi-arrow-right-circle"></i> View All
                                        </a>
                                    </h4>
                                </div>
                                <div class="card-body p-3">
                                    @{
                                        var bookings = ViewBag.Bookings as List<Booking>;
                                        if (bookings?.Any() == true)
                                        {
                                            <div class="booking-grid">
                                                @foreach (var booking in bookings.Take(3))
                                                {
                                                    <div class="booking-card shadow-sm rounded-3 mb-3 animate__animated animate__fadeIn" style="background: #fff; transition: transform 0.3s;">
                                                        <div class="p-3">
                                                            <h6 class="text-primary fw-bold mb-1">@booking.Villa.Name</h6>
                                                            <p class="text-muted small mb-1">
                                                                @booking.CheckInDate.ToString("MMM dd, yyyy") - @booking.CheckOutDate.ToString("MMM dd, yyyy")
                                                            </p>
                                                            <p class="text-success fw-bold mb-1">$@booking.TotalCost.ToString("F2")</p>
                                                            <span class="badge @(booking.status == SD.StatusApproved ? "bg-success" : (booking.status == SD.StatusCancelled ? "bg-danger" : "bg-warning")) text-white">
                                                                @booking.status
                                                            </span>
                                                            @if (booking.status == SD.StatusApproved || booking.status == SD.StatusPending)
                                                            {
                                                                <button type="button" class="btn btn-danger btn-sm rounded-pill cancel-btn" data-booking-id="@booking.Id">
                                                                    <i class="bi bi-x-circle me-1"></i> Cancel
                                                                </button>
                                                            }
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        }
                                        else
                                        {
                                            <p class="text-center text-muted">No recent bookings found.</p>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Change Password Link -->
                    <div class="text-center mt-4">
                        <a asp-action="ChangePassword" asp-controller="Account" class="btn btn-outline-primary rounded-3 py-2" style="border-color: #007bff; transition: all 0.3s;">
                            <i class="bi bi-lock-fill me-2"></i> Change Password
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <!--  SweetAlert2 CDN -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        (function () {
            'use strict';
            var forms = document.querySelectorAll('.needs-validation');
            Array.prototype.slice.call(forms).forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        })();

        document.addEventListener('DOMContentLoaded', function () {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });


            document.querySelectorAll('.cancel-btn').forEach(button => {
                button.addEventListener('click', function () {
                    const bookingId = this.getAttribute('data-booking-id');

                    Swal.fire({
                        title: 'Confirm Cancellation',
                        text: 'Are you sure you want to cancel this booking?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#dc3545',
                        cancelButtonColor: '#6c757d',
                        confirmButtonText: 'Yes, Cancel Booking',
                        cancelButtonText: 'No, Keep Booking'
                    }).then((result) => {
                        if (result.isConfirmed) {

                            fetch(`/Booking/CancelBooking?bookingId=${bookingId}`, {
                                method: 'POST',
                                headers: {
                                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                                }
                            })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    Swal.fire({
                                        title: 'Success!',
                                        text: 'Booking canceled successfully.',
                                        icon: 'success',
                                        confirmButtonText: 'OK'
                                    }).then(() => {
                                        location.reload(); 
                                    });
                                } else {
                                    Swal.fire({
                                        title: 'Error!',
                                        text: data.message || 'Failed to cancel booking.',
                                        icon: 'error',
                                        confirmButtonText: 'OK'
                                    });
                                }
                            })
                            .catch(error => {
                                Swal.fire({
                                    title: 'Error!',
                                    text: 'An error occurred while canceling the booking.',
                                    icon: 'error',
                                    confirmButtonText: 'OK'
                                });
                            });
                        }
                    });
                });
            });
        });
    </script>
}